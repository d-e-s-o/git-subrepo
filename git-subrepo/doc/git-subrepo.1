'\" t
.\"     Title: git-subrepo
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.0 <http://docbook.sf.net/>
.\"      Date: 11/28/2015
.\"    Manual: Git Manual
.\"    Source: Git
.\"  Language: English
.\"
.TH "GIT\-SUBREPO" "1" "11/28/2015" "Git" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-subrepo \- Add and update subrepos
.SH "SYNOPSIS"
.sp
.nf
\fIgit subrepo\fR add [\-\-edit] <remote\-repository> <prefix> <commit>
\fIgit subrepo\fR update [\-\-edit] <remote\-repository> <prefix> <commit>
.fi
.sp
.SH "DESCRIPTION"
.sp
Adds and updates subrepos\&.
.sp
A subrepo allows you to keep another Git repository in a subdirectory of your current repository (the current repository is termed the "superrepo")\&. The other repository\(cqs source code is thereby embedded directly into this repository\&. This embedding makes subrepos preferable to submodules (see \fBgit-submodule\fR(1)) in many scenarios, as references to another repository cannot become invalid and all dependencies required in the superrepo are contained in it\&. In that sense, subrepos behave similar to subtrees (see \fBgit-subtree\fR(1)) when using the \-\-squash option to squash commits\&. The resulting commit, however, is not a merge in any way\&. Rather, the source code is imported as a "normal" commit, allowing for rebasing to take place, for instance\&.
.sp
Being part of the superrepo, clone and pull operations will involve any subrepos equally well, without any additional command invocations being required\&.
.SH "COMMANDS"
.PP
add
.RS 4
Add the given remote repository as a subrepo at the given prefix/path in the state as specified by the given commit\&. A new commit will be created in the superrepo that imports the source code\&.
.RE
.PP
update
.RS 4
Update an existing subrepo so that the state of the source code in the subdirectory specified by the given prefix matches that of the remote repository at the given commit\&. A new commit will be created in the superrepo that contains the differences between the state before and after the update\&.
.RE
.SH "OPTIONS"
.PP
<remote\-repository>
.RS 4
Name of a remote repository to import in the form of a subrepo\&. The remote repository should be up\-to\-date such that the given commit is known locally\&. Please refer to
\fBgit-remote\fR(1)
for more details on remote repositories\&.
.RE
.PP
<prefix>
.RS 4
Relative path specifying where to add a new subrepo or where an already imported one to update resides\&.
.RE
.PP
<commit>
.RS 4
Commit representing the state at which to import the given remote repository as a subrepo or to which to update the given subrepo to\&.
.RE
.PP
\-e, \-\-edit
.RS 4
By default git\-subrepo creates a commit message containing only the essential information for a particular commit\&. When this option is set the committer gets the chance to further edit the message\&.
.RE
.SH "GIT"
.sp
To be used in conjunction with the \fBgit\fR(1) suite
